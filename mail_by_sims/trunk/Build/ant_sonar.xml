<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project basedir="." default="sonar" name="Mail by sims">
	<!-- Proprietées globales du scripts ant  -->
	<property name="junit.output.dir" value="../junit"/>
	<property name="instrumented.dir" value="../cobertura/instrumented"/>
	<property name="classes.dir" value="../bin"/>
	<property name="jars.dir" value="../lib"/>
	<property name="test.dir" value="../test"/>
	<property name="cobertura.dir" value="${jars.dir}/cobertura"/>
	<property name="reports.xml.dir" value="../cobertura/reports"/>
	<property name="cob.ser.file" value="cobertura.ser" />
	<property name="majornum" value="0"/>
	<!-- Propriete exclusive a svn  -->
	
	<condition property="svn" value="${svn.home}\svn.exe" else="svn.exe">
		<isset property="svn.home"/>
	</condition>
	<!--
	=======================================================================
	   Tache de lecture du numéro de révision de la copie de travail.
	   propriétés :
	      basedir répertoire de la copie de travail
	  retour
	    svn.revision= version de la copie de travail.
	=======================================================================
	-->
	<target name="svnrevision"  description="Extraire le numéro de la copie de travail" >
		<!-- Exécuter "svn - -xml info" pour obtenir les details  -->
		<exec executable="${svn}" dir="${basedir}" failonerror="true" output=".svnInfo.xml">
   			<arg value="--non-interactive"/>
   			<arg value="--no-auth-cache"/>	
			<!-- <arg line="-->
			<!--username blablabla"/>
			<arg line="-->
			<!--password 1234"/>-->			
			<arg value="--xml"/>				
			<arg value="info"/>
		</exec>

		<!-- extraire le numéro de version  du fichier XML -->
		<xmlproperty file=".svnInfo.xml"/>
		<property name="svn.revision" value="${info.entry.commit(revision)}" />
		<echo message="Version de la copie de travail:${svn.revision}"/>
		<delete file=".svnInfo.xml" />
	</target>
	
	
	
  <!-- Define the Sonar task if this hasn't been done in a common script -->
  <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
    <classpath path="C:\hudson\tools\my_ant\lib" />
 </taskdef>
	
	<path id="cobertura.classpath">
	    <fileset dir="${cobertura.dir}">
	        <include name="cobertura.jar" />
	        <include name="lib/**/*.jar" />
	    </fileset>
		<fileset dir="${jars.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
	
	<target name="clean" depends="svnrevision" description="effacer les repertoires instrumented et reports ">
		<delete dir="${instrumented.dir}" />
		<delete dir="${reports.xml.dir}" />
		<delete file="${cob.ser.file}" />
	</target>
	
	<target name="prepare" depends="clean" description="créer les repertoires instrumented et reports ">
		    <mkdir dir="${instrumented.dir}" />
		    <mkdir dir="${reports.xml.dir}" />
	</target>
	<target name="instrument" depends="prepare" description="intrumenter les classes pour cobertura">
		<cobertura-instrument todir="${instrumented.dir}">
			    <ignore regex="org.apache.log4j.*" />
			    <fileset dir="${classes.dir}">
			        <include name="**/*.class" />
			        <exclude name="**/*Test.class" />
			    </fileset>
			    
			</cobertura-instrument>
	</target>
	
	
	
	<target name="testsuite" depends="instrument" description="lancer la classe testsuite qui déroule tout les tests">
		<junit fork="yes" dir="${test.dir}" failureProperty="test.failed"  printsummary="withOutAndErr">
				<!--
					Specify the name of the coverage data file to use.
					The value specified below is the default.
				-->
				<sysproperty key="net.sourceforge.cobertura.datafile"
					file="${basedir}/cobertura.ser" />
				<!--
					Note the classpath order: instrumented classes are before the
					original (uninstrumented) classes.  This is important.
				-->
				<classpath location="${instrumented.dir}" />
				<classpath location="${classes.dir}" />
			
				<!--
					The instrumented classes reference classes used by the
					Cobertura runtime, so Cobertura and its dependencies
					must be on your classpath.
				-->
				<classpath refid="cobertura.classpath" />

				<formatter type="xml" />
				<test name="test.TestSuiteClientMail" todir="${reports.xml.dir}" />
				<!-- a decommenter si on veut test les TestClasses une par une -->
				<!--<batchtest todir="${reports.xml.dir}" unless="testcase">
					<fileset dir="${test.dir}">
						<include name="**/*Test*.java" />
					</fileset>
				</batchtest>-->
			</junit>
	</target>
	
	<target name="cover-report" depends="testsuite" description="generer le rapport cobertura">
		<cobertura-report format="xml" destdir="${reports.xml.dir}" srcdir="${test.dir}" />
	</target>
	
  
  <!-- Add the target -->
  <target name="sonar" depends="cover-report" description="lancer l'analyse sonar">
  	<buildnumber/>
  	  
    <!-- The workDir directory is used by Sonar to store temporary files -->
    <sonar:sonar workDir="./" key="fr.simscorps:client.mail" version="0.1-SNAPSHOT" xmlns:sonar="antlib:org.sonar.ant">
	<property key="sonar.host.url" value="http://localhost:30123/sonar/" />
      <!-- source directories (required) -->
      <sources>
        <path location="../src" />
      </sources>
  
    	<!-- list of properties (optional) -->
      <property key="sonar.dynamicAnalysis" value="reuseReports" /><!--reuseReports si on veut utiliser les rapport cobertura, false sinon  -->
      <property key="sonar.projectName" value="client mail" />
      <property key="sonar.java.source" value="1.5" />
      <property key="sonar.projectVersion" value="${majornum}.${svn.revision}-SNAPSHOT" />
      <!--<property key="sonar.phase" value="generate-sources"/> -->
      <property key="sonar.cobertura.reportPath" value="${reports.xml.dir}/coverage.xml"/> <!--chemin du rapport cobertura  -->
      <property key="sonar.surefire.reportsPath"  value="${reports.xml.dir}/TESTS-test.TestSuiteClientMail.xml" /> <!--chemin du rapport junit -->
    
      <!-- test source directories (optional) -->
      <tests>
        <path location="../test" />
      </tests>
 
      <!-- binaries directories, which contain for example the compiled Java bytecode (optional) -->
      <binaries>
        <path location="../bin" />
      </binaries>
 
      <!-- path to libraries (optional). These libraries are for example used by the Java Findbugs plugin -->
      <libraries>
      	<path location="../lib/activation.jar" />
      	<path location="../lib/deltasync.jar" />
       	<path location="../lib/jaybird_full_2_1_6.jar" />
       	<path location="../lib/junit.jar" />
       	<path location="../lib/mail.jar" />
       	<path location="../lib/libdeltasync/apache-mime4j-0.5.jar"/>
      	<path location="../lib/libdeltasync/commons-codec-1.5.jar"/>
        <path location="../lib/libdeltasync/commons-codec-1.5-javadoc.jar"/>
        <path location="../lib/libdeltasync/commons-codec-1.5-sources.jar"/>
        <path location="../lib/libdeltasync/commons-logging-1.1.1.jar"/>
        <path location="../lib/libdeltasync/httpclient-4.1.1.jar"/>
        <path location="../lib/libdeltasync/httpclient-cache-4.1.1.jar"/>
        <path location="../lib/libdeltasync/httpcore-4.1.jar"/>
        <path location="../lib/libdeltasync/httpmime-4.1.1.jar"/>
        <path location="../lib/libdeltasync/logback-classic-0.9.29.jar"/>
        <path location="../lib/libdeltasync/logback-classic-0.9.29-sources.jar"/>
        <path location="../lib/libdeltasync/logback-core-0.9.29.jar"/>
        <path location="../lib/libdeltasync/logback-core-0.9.29-sources.jar"/>
        <path location="../lib/libdeltasync/slf4j-api-1.6.1.jar"/>
        <path location="../lib/libdeltasync/slf4j-api-1.6.1-sources.jar"/>
      </libraries>
    </sonar:sonar>
  </target>


</project>